"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const postController_1 = require("@/controllers/postController");
const auth_1 = require("@/middleware/auth");
const validation_1 = require("@/middleware/validation");
const rateLimiter_1 = require("@/middleware/rateLimiter");
const router = (0, express_1.Router)();
router.get('/', auth_1.optionalAuth, (0, validation_1.validateQuery)(validation_1.schemas.pagination), postController_1.postController.getPosts);
router.get('/popular', (0, validation_1.validateQuery)(validation_1.schemas.pagination), postController_1.postController.getPopularPosts);
router.get('/lastwords', auth_1.optionalAuth, (0, validation_1.validateQuery)(validation_1.schemas.pagination), postController_1.postController.getLastWords);
router.get('/user/:userId', (0, validation_1.validateParams)(validation_1.schemas.objectId), postController_1.postController.getUserPosts);
router.get('/:id', auth_1.optionalAuth, (0, validation_1.validateParams)(validation_1.schemas.objectId), postController_1.postController.getPost);
router.use(auth_1.authenticate);
router.post('/', (0, auth_1.authorize)('graduate'), (0, validation_1.validate)(validation_1.schemas.createPost), postController_1.postController.createPost);
router.post('/:id/like', rateLimiter_1.likeLimiter, (0, validation_1.validateParams)(validation_1.schemas.objectId), postController_1.postController.likePost);
router.post('/:id/save', (0, validation_1.validateParams)(validation_1.schemas.objectId), postController_1.postController.savePost);
router.post('/:id/comment', rateLimiter_1.commentLimiter, (0, validation_1.validateParams)(validation_1.schemas.objectId), (0, validation_1.validate)(validation_1.schemas.addComment), postController_1.postController.commentOnPost);
router.post('/:id/share', (0, validation_1.validateParams)(validation_1.schemas.objectId), postController_1.postController.sharePost);
router.delete('/:id', (0, validation_1.validateParams)(validation_1.schemas.objectId), postController_1.postController.deletePost);
router.get('/me/saved', postController_1.postController.getSavedPosts);
router.get('/me/liked', postController_1.postController.getLikedPosts);
exports.default = router;
//# sourceMappingURL=post.js.map