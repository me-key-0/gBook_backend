{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-06 06:59:54'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:03:30'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-06 07:18:29'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 39018037,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 39018037,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 39018037,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 07:18:51'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:20:22'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:20:22'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:20:22'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:20:22'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:20:22'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:20:22'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:27:45'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:27:45'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:27:45'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:27:45'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:27:45'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:27:45'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:28:40'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:28:40'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:28:40'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:28:40'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:28:40'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:28:40'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:29:42'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:29:42'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:29:42'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:29:42'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:29:42'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:29:42'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:32:35'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:32:35'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:32:35'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:32:35'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:32:35'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:32:35'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:36'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:36'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:36'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:36'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:36'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:36'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:57'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:58'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:58'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:58'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:58'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:33:58'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:36:10'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:36:10'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:36:10'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:36:10'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:36:10'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:36:10'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:39:27'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:39:27'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:39:27'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:39:27'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:39:27'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:39:27'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:21'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:21'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:21'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:21'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:21'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:21'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:48'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:48'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:48'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:48'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:48'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:48'
}
{
  message: 'Connected to MongoDB for seeding',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:57'
}
{
  message: 'Clearing existing data...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:57'
}
{
  message: 'Database cleared',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:59'
}
{
  message: 'Seeding campuses...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:59'
}
{
  message: 'Seeded 3 campuses',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:59'
}
{
  message: 'Seeding colleges...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:59'
}
{
  message: 'Seeded 4 colleges',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:59'
}
{
  message: 'Seeding departments...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:40:59'
}
{
  message: 'Seeded 10 departments',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:41:00'
}
{
  message: 'Seeding questions...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:41:00'
}
{
  message: 'Seeded 13 questions',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:41:00'
}
{
  message: 'Seeding tags...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:41:00'
}
{
  message: 'Seeded 30 tags',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:41:00'
}
{
  message: 'Seeding users...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:41:00'
}
{
  service: 'gradbook-api',
  errors: {
    role: ValidatorError: `admin` is not a valid enum value for path `role`.
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaString.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: '`admin` is not a valid enum value for path `role`.',
        type: 'enum',
        enumValues: [ 'graduate', 'guest' ],
        path: 'role',
        fullPath: undefined,
        value: 'admin'
      },
      kind: 'enum',
      path: 'role',
      value: 'admin',
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'User validation failed',
  level: 'error',
  message: '‚ùå Database seeding failed: User validation failed: role: `admin` is not a valid enum value for path `role`.',
  stack: 'ValidationError: User validation failed: role: `admin` is not a valid enum value for path `role`.\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 07:41:00'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:12'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:12'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:12'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:12'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:12'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:12'
}
{
  message: 'Connected to MongoDB for seeding',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:19'
}
{
  message: 'Clearing existing data...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:19'
}
{
  message: 'Database cleared',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:21'
}
{
  message: 'Seeding campuses...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:21'
}
{
  message: 'Seeded 3 campuses',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeding colleges...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeded 4 colleges',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeding departments...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeded 10 departments',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeding questions...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeded 13 questions',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeding tags...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:22'
}
{
  message: 'Seeded 30 tags',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:23'
}
{
  message: 'Seeding users...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 07:43:23'
}
{
  service: 'gradbook-api',
  errors: {
    surname: ValidatorError: Surname is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaString.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Surname is required',
        type: 'required',
        path: 'surname',
        fullPath: undefined,
        value: ''
      },
      kind: 'required',
      path: 'surname',
      value: '',
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'User validation failed',
  level: 'error',
  message: '‚ùå Database seeding failed: User validation failed: surname: Surname is required',
  stack: 'ValidationError: User validation failed: surname: Surname is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 07:43:24'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ECONNREFUSED',
  syscall: 'querySrv',
  hostname: '_mongodb._tcp.nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: 'Failed to connect to MongoDB: querySrv ECONNREFUSED _mongodb._tcp.nodexpress.ped78m1.mongodb.net',
  stack: 'Error: querySrv ECONNREFUSED _mongodb._tcp.nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-06 10:34:49'
}
{
  message: 'Connected to MongoDB for seeding',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:52'
}
{
  message: 'Clearing existing data...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:52'
}
{
  message: 'Database cleared',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:56'
}
{
  message: 'Seeding campuses...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:56'
}
{
  message: 'Seeded 3 campuses',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:56'
}
{
  message: 'Seeding colleges...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:56'
}
{
  message: 'Seeded 4 colleges',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:56'
}
{
  message: 'Seeding departments...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:56'
}
{
  message: 'Seeded 10 departments',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:57'
}
{
  message: 'Seeding questions...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:57'
}
{
  message: 'Seeded 13 questions',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:57'
}
{
  message: 'Seeding tags...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:57'
}
{
  message: 'Seeded 30 tags',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:57'
}
{
  message: 'Seeding users...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:35:57'
}
{
  service: 'gradbook-api',
  errors: {
    surname: ValidatorError: Surname is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaString.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Surname is required',
        type: 'required',
        path: 'surname',
        fullPath: undefined,
        value: ''
      },
      kind: 'required',
      path: 'surname',
      value: '',
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'User validation failed',
  level: 'error',
  message: '‚ùå Database seeding failed: User validation failed: surname: Surname is required',
  stack: 'ValidationError: User validation failed: surname: Surname is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 10:35:58'
}
{
  message: 'Connected to MongoDB for seeding',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:05'
}
{
  message: 'Clearing existing data...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:05'
}
{
  message: 'Database cleared',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:08'
}
{
  message: 'Seeding campuses...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:08'
}
{
  message: 'Seeded 3 campuses',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:08'
}
{
  message: 'Seeding colleges...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:08'
}
{
  message: 'Seeded 4 colleges',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:08'
}
{
  message: 'Seeding departments...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:08'
}
{
  message: 'Seeded 10 departments',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:09'
}
{
  message: 'Seeding questions...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:09'
}
{
  message: 'Seeded 13 questions',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:09'
}
{
  message: 'Seeding tags...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:09'
}
{
  message: 'Seeded 30 tags',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:09'
}
{
  message: 'Seeding users...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:09'
}
{
  service: 'gradbook-api',
  errors: {
    surname: ValidatorError: Surname must be at least 2 characters
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaString.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'Surname must be at least 2 characters',
        type: 'minlength',
        minlength: 2,
        path: 'surname',
        fullPath: undefined,
        value: 'V'
      },
      kind: 'minlength',
      path: 'surname',
      value: 'V',
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'User validation failed',
  level: 'error',
  message: '‚ùå Database seeding failed: User validation failed: surname: Surname must be at least 2 characters',
  stack: 'ValidationError: User validation failed: surname: Surname must be at least 2 characters\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 10:42:10'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:48'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:48'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:48'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:48'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:48'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:48'
}
{
  message: 'Connected to MongoDB for seeding',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:56'
}
{
  message: 'Clearing existing data...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:56'
}
{
  message: 'Database cleared',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:59'
}
{
  message: 'Seeding campuses...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:59'
}
{
  message: 'Seeded 3 campuses',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:59'
}
{
  message: 'Seeding colleges...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:42:59'
}
{
  message: 'Seeded 4 colleges',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeding departments...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeded 10 departments',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeding questions...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeded 13 questions',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeding tags...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeded 30 tags',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeding users...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:00'
}
{
  message: 'Seeded 61 users (1 admin, 50 graduates, 10 guests)',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'Seeding posts...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'Seeded 80 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: '‚úÖ Database seeding completed successfully!',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: '\nüìã Sample Credentials:',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'Admin: admin@gradbook.com / password123',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'Graduate: john.smith0@university.edu / password123',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'Guest: guest0@example.com / password123',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'Disconnected from MongoDB',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:43:03'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:36'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:47'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:47'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:47'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:47'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:47'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:45:47'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:48:28'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:48:29'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:49:08'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:49:20'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:49:21'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:50:48'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:50:50'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:51:13'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:51:13'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 10:53:44'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:16:58'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:23:39'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:23:39'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:23:50'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:23:50'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:50:42'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 11:50:42'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:05:09'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:05:09'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:12:14'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:12:25'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:12:25'
}
{
  message: 'GET /users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:14:04'
}
{
  message: 'GET / - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:14:46'
}
{
  message: 'GET /api/v1/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:15:53'
}
{
  service: 'gradbook-api',
  statusCode: 401,
  isOperational: true,
  level: 'error',
  message: 'Authentication error: Access token is required',
  stack: 'Error: Access token is required\n' +
    '    at authenticate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\src\\middleware\\auth.ts:27:13)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\index.js:328:13)',
  timestamp: '2025-07-06 12:15:53'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:18:06'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:18:17'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:18:33'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:19:59'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:20:05'
}
{
  message: 'POST //auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:25:17'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:25:31'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Validation error:',
  timestamp: '2025-07-06 12:25:32'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:26:06'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:26:17'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:27:12'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:29:59'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:31:39'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:33:11'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:34:27'
}
{
  message: 'User logged in: john.smith0@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:34:30'
}
{
  message: 'GET /api/v1/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:35:05'
}
{
  message: 'GET /api/v1/users/1 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:35:36'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-06 12:35:36'
}
{
  message: 'GET /api/v1/users/686a29064ecf459fa06f25cf - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:35:55'
}
{
  message: 'User 686a29064ecf459fa06f25b8 viewd user 686a29064ecf459fa06f25cf',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:35:56'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25b8/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:37:38'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Cannot like your own profile',
  stack: 'Error: Cannot like your own profile\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\src\\controllers\\userController.ts:83:13\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\src\\middleware\\errorHandler.ts:85:21\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at next (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\route.js:149:13)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\src\\middleware\\validation.ts:66:5\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at next (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express\\lib\\router\\route.js:149:13)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express-rate-limit\\dist\\index.cjs:807:7\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\express-rate-limit\\dist\\index.cjs:691:5',
  url: '/api/v1/users/686a29064ecf459fa06f25b8/like',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 12:37:38'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25b9/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:37:59'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 12:38:00'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/users/686a29064ecf459fa06f25b9/like',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 12:38:00'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:39:58'
}
{
  message: 'GET /api/v1/users/686a29064ecf459fa06f25ba - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:40:10'
}
{
  message: 'User 686a29064ecf459fa06f25b8 viewd user 686a29064ecf459fa06f25ba',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:40:12'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:40:23'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 12:40:24'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/users/686a29064ecf459fa06f25ba/like',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 12:40:24'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:40:51'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 12:40:52'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/users/686a29064ecf459fa06f25ba/like',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 12:40:52'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:42:47'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 12:42:48'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/users/686a29064ecf459fa06f25ba/like?fromUser=686a29064ecf459fa06f25b8&user=686a29064ecf459fa06f25ba',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 12:42:48'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:50:14'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:50:14'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:50:14'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:50:14'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:50:14'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:50:14'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:56:40'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:56:40'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:56:40'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:56:40'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:56:40'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:56:40'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:58:53'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:58:53'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:58:53'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:58:53'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:58:53'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 12:58:53'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:00:48'
}
{
  message: 'Notification sent to user 686a29064ecf459fa06f25ba: John Smith liked your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:01:00'
}
{
  message: 'Notification created for user 686a29064ecf459fa06f25ba: John Smith liked your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:01:00'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/comment - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:06:38'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 13:06:40'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/users/686a29064ecf459fa06f25ba/comment?fromUser=686a29064ecf459fa06f25b8&user=686a29064ecf459fa06f25ba',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 13:06:40'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:08:32'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:08:32'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:08:32'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:08:32'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:08:32'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:08:32'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:09:37'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:09:37'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:09:37'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:09:37'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:09:37'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:09:37'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:10:37'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:10:37'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:10:37'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:10:37'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:10:37'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:10:37'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/comment - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:11:36'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Downloads\project-bolt-github-zfu7sdsa\project\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-06 13:11:38'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Downloads\\project-bolt-github-zfu7sdsa\\project\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/users/686a29064ecf459fa06f25ba/comment?fromUser=686a29064ecf459fa06f25b8&user=686a29064ecf459fa06f25ba',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-06 13:11:38'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:24'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:24'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:24'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:24'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:24'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:24'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/comment - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:25'
}
{
  message: 'Notification sent to user 686a29064ecf459fa06f25ba: John Smith commented on your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:32'
}
{
  message: 'Notification created for user 686a29064ecf459fa06f25ba: John Smith commented on your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:14:32'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/comment - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:15:26'
}
{
  message: 'Notification sent to user 686a29064ecf459fa06f25ba: John Smith commented on your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:15:29'
}
{
  message: 'Notification created for user 686a29064ecf459fa06f25ba: John Smith commented on your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:15:29'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:16:54'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:16:54'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:16:54'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:16:54'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:16:54'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:16:54'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:17:03'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:17:03'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:17:03'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:17:03'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:17:03'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:17:03'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/comment - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:19:29'
}
{
  message: 'Notification created for user 686a29064ecf459fa06f25ba: John Smith commented on your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:19:31'
}
{
  message: 'Notification sent to user 686a29064ecf459fa06f25ba: John Smith commented on your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:19:31'
}
{
  message: 'GET /api/v1/users/686a29064ecf459fa06f25cf - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:20:03'
}
{
  message: 'User 686a29064ecf459fa06f25b8 viewd user 686a29064ecf459fa06f25cf',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:20:04'
}
{
  message: 'GET /api/v1//posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:21:42'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:22:10'
}
{
  message: 'Generated personalized feed for user 686a29064ecf459fa06f25b8: 20 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:22:13'
}
{
  message: 'GET /api/v1/posts/lastwords - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:23:56'
}
{
  message: 'POST /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:25:40'
}
{
  service: 'gradbook-api',
  errno: -4077,
  code: 'ECONNRESET',
  syscall: 'read',
  level: 'error',
  message: 'Authentication error: read ECONNRESET',
  stack: 'Error: read ECONNRESET\n' +
    '    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)',
  timestamp: '2025-07-06 13:26:14'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:28:03'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:28:03'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:29:48'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:29:48'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:53:40'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:54:27'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 13:54:27'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:02:47'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:02:48'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:02:48'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:02:48'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:02:48'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:02:48'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:54:14'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:54:14'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:54:14'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:54:14'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:54:14'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 14:54:14'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:24:11'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:44:41'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:44:41'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:44:41'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:44:41'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:44:41'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 15:44:41'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70463152,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70463152,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70463152,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 16:02:56'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70571472,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70571472,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70571472,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 16:04:45'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70659385,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70659385,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 70659385,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 16:06:13'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 76348075,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 76348075,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 76348075,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 17:41:01'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:43:43'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:43:43'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:43:43'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:43:43'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:43:43'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:43:43'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:47:16'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 17:47:17'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:37:11'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:37:11'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:37:11'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:37:11'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:37:11'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:37:11'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:43:01'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:57:39'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 19:57:39'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:00:24'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:00:32'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:03:32'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:03:32'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:05:29'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:05:42'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:21:59'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:22:03'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:47:17'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 20:47:28'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:13:19'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:13:28'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:18:20'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:18:20'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:20:29'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:20:29'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:21:09'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:23:03'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:23:04'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:24:04'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-06 21:24:04'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 98950249,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 98950249,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 98950249,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 23:57:44'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 98980479,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 98980479,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 98980479,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-06 23:58:14'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:05:33'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:05:33'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:05:33'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:05:33'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:05:33'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:05:33'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:06:00'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:06:07'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:07:17'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:07:21'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:07:40'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:07:47'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:09:12'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: read ECONNRESET',
  stack: 'Error: read ECONNRESET\n' +
    '    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-07 00:09:47'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:09:47'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:09:56'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:09:57'
}
{
  message: 'User logged in: john.smith0@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:10:01'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:10:22'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:10:32'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:10:45'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 00:11:45'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ECONNREFUSED',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ECONNREFUSED nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ECONNREFUSED nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 00:12:33'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:01'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:01'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:01'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:01'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:01'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:01'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:08'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.0',
  level: 'error',
  timestamp: '2025-07-07 00:13:09'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:49'
}
{
  message: 'User logged in: john.smith0@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:50'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:50'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:50'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:13:51'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:15:10'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:113:13\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:15:11'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:16:57'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:113:13\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:16:57'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:22:53'
}
{
  message: 'User logged in: john.smith0@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:22:55'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:22:55'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:22:55'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:22:55'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:24'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:35'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:44'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:44'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:44'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:44'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:44'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:44'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:24:59'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:25:00'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:25:20'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:25:21'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:27:14'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:27:28'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: read ECONNRESET',
  stack: 'Error: read ECONNRESET\n' +
    '    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:27:33'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:27:34'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:27:34'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:27:35'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:27:35'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:119:13',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Mobile Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 00:27:39'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:28:12'
}
{
  message: 'User logged in: john.smith0@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:28:13'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:28:13'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:28:13'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:28:15'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:29:56'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:02'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:12'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:12'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:12'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:12'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:12'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:12'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:19'
}
{
  message: 'User logged in: david.jones44@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:20'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:20'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:30:21'
}
{
  message: 'POST /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:33:33'
}
{
  message: 'GET /api/v1/auth/me - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:33:40'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:35:00'
}
{
  message: 'User logged in: john.smith0@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:35:01'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:35:01'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:35:52'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:36:16'
}
{
  message: 'User logged in: david.jones44@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:36:18'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:36:18'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:36:29'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:37:45'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:37:52'
}
{
  service: 'gradbook-api',
  errno: -4077,
  code: 'ECONNRESET',
  syscall: 'read',
  level: 'error',
  message: 'Authentication error: read ECONNRESET',
  stack: 'Error: read ECONNRESET\n' +
    '    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)',
  timestamp: '2025-07-07 00:38:13'
}
{
  service: 'gradbook-api',
  errno: -4077,
  code: 'ECONNRESET',
  syscall: 'read',
  level: 'error',
  message: 'Authentication error: read ECONNRESET',
  stack: 'Error: read ECONNRESET\n' +
    '    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)',
  timestamp: '2025-07-07 00:38:22'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:38:30'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:38:41'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:38:44'
}
{
  service: 'gradbook-api',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101415717,
        lastWriteDate: 0,
        error: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.95:27017 timed out
            at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
            at listOnTimeout (node:internal/timers:581:17)
            at processTimers (node:internal/timers:519:7) {
          errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
          beforeHandshake: false,
          [cause]: undefined
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101415666,
        lastWriteDate: 0,
        error: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.84:27017 timed out
            at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
            at listOnTimeout (node:internal/timers:581:17)
            at processTimers (node:internal/timers:519:7) {
          errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
          beforeHandshake: false,
          [cause]: undefined
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101416646,
        lastWriteDate: 0,
        error: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.105:27017 timed out
            at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
            at listOnTimeout (node:internal/timers:581:17)
            at processTimers (node:internal/timers:519:7) {
          errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
          beforeHandshake: false,
          [cause]: undefined
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: new ObjectId('7fffffff000000000000002b'),
    maxSetVersion: 4,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  message: 'Authentication error: connection <monitor> to 159.41.79.95:27017 timed out',
  stack: 'MongoServerSelectionError: connection <monitor> to 159.41.79.95:27017 timed out\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at runNextTicks (node:internal/process/task_queues:60:5)\n' +
    '    at listOnTimeout (node:internal/timers:545:9)\n' +
    '    at processTimers (node:internal/timers:519:7)\n' +
    '    at tryOperation (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:264:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)',
  cause: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.95:27017 timed out
      at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
      at listOnTimeout (node:internal/timers:581:17)
      at processTimers (node:internal/timers:519:7) {
    errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
    beforeHandshake: false,
    [cause]: undefined
  },
  timestamp: '2025-07-07 00:38:49'
}
{
  service: 'gradbook-api',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101415717,
        lastWriteDate: 0,
        error: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.95:27017 timed out
            at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
            at listOnTimeout (node:internal/timers:581:17)
            at processTimers (node:internal/timers:519:7) {
          errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
          beforeHandshake: false,
          [cause]: undefined
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101415666,
        lastWriteDate: 0,
        error: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.84:27017 timed out
            at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
            at listOnTimeout (node:internal/timers:581:17)
            at processTimers (node:internal/timers:519:7) {
          errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
          beforeHandshake: false,
          [cause]: undefined
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101416646,
        lastWriteDate: 0,
        error: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.105:27017 timed out
            at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
            at listOnTimeout (node:internal/timers:581:17)
            at processTimers (node:internal/timers:519:7) {
          errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
          beforeHandshake: false,
          [cause]: undefined
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: new ObjectId('7fffffff000000000000002b'),
    maxSetVersion: 4,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  message: 'Authentication error: connection <monitor> to 159.41.79.95:27017 timed out',
  stack: 'MongoServerSelectionError: connection <monitor> to 159.41.79.95:27017 timed out\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at tryOperation (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:264:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)\n' +
    '    at Collection.findOne (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\collection.ts:525:17)\n' +
    '    at model.Query._findOne (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:2661:15)\n' +
    '    at model.Query.exec (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:4456:63)',
  cause: MongoNetworkTimeoutError: connection <monitor> to 159.41.79.95:27017 timed out
      at Timeout._onTimeout (C:\Users\dell\Downloads\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connection.ts:319:20)
      at listOnTimeout (node:internal/timers:581:17)
      at processTimers (node:internal/timers:519:7) {
    errorLabelSet: Set(2) { 'ResetPool', 'InterruptInUseConnections' },
    beforeHandshake: false,
    [cause]: undefined
  },
  timestamp: '2025-07-07 00:38:49'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:38:57'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101461306,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101461306,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 101461306,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Downloads\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-07 00:39:35'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:40:55'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:40:55'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:40:55'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:40:55'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:40:55'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:40:55'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:41:10'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:41:49'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:42:00'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:48:35'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:48:45'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:48:45'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:49:45'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 00:49:51'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:08:34'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:08:50'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:07'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:30'
}
{
  message: 'User logged in: david.jones44@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:33'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:33'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:40'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:46'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:09:51'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:13:00'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:13:05'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:13:39'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:13:48'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:14:05'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:16:02'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:16:13'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:19:55'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:20:11'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:20:22'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:20:32'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:20:35'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:22:40'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:22:45'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:22:54'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:23:14'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:23:19'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:23:26'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:23:28'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:23:41'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:23:59'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:24:07'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:24:12'
}
{
  message: 'POST /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:24:30'
}
{
  message: 'Tag created by admin 686a29064ecf459fa06f25e4: 686af7a43f88da2921d7c33a',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:24:37'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:24:37'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:25:26'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:32'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:42'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:45'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:48'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:53'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:55'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:28:56'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:30:10'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:30:12'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 01:31:32'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:36'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:36'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:36'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:36'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:36'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:36'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:24:50'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid email or password',
  stack: 'Error: Invalid email or password\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:113:13\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  url: '/api/v1/auth/login',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 06:24:50'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:37'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:39'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:39'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:44'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:45'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:47'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:25:47'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:35:37'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:35:38'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:36:22'
}
{
  message: 'GET /api/v1/admin/users/1 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:36:56'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 06:36:56'
}
{
  message: 'GET /api/v1/admin/users/2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:37:04'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 06:37:04'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:37:20'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 06:37:20'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:37:26'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 06:37:26'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:37:44'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 06:37:44'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:37:53'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:04'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:05'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:05'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:05'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:05'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:05'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:21'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 06:38:21'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:53'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:38:55'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:39:17'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:39:18'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:39:32'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:40:56'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:47:18'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:10'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:11'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:12'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:14'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:17'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:20'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:23'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:23'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:25'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:25'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:49:29'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:04'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:05'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:17'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:18'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:19'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:21'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:23'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:23'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:26'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:51:27'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:54:26'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:54:39'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:54:41'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:54:43'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:54:43'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:18'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:19'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:22'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:23'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:24'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:27'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:29'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:30'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:45'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:47'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:48'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:55:49'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:06'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:13'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:14'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:14'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:21'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:23'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:25'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:26'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:55'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:56:58'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:00'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:01'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:03'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:21'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:24'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:25'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:27'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:29'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:57:56'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:01'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:02'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:12'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:26'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:30'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:33'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:35'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:40'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:46'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:47'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:48'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:54'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 06:59:57'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:00:03'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:00:05'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:00:05'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:00:21'
}
{
  message: 'POST /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:00:55'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Question validation failed: question: Question text is required, category: Question category is required',
  stack: 'ValidationError: Question validation failed: question: Question text is required, category: Question category is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/admin/questions',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 07:00:55'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:02:37'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:02:41'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:03:06'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:05:20'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:05:26'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:07:23'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:07:40'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:08:12'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:10:44'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:10:51'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:13:54'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:15:03'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:16:28'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:16:47'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:16:48'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:16:57'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:17:03'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:17:07'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:20:15'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:22:14'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:23:41'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:26:00'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:26:12'
}
{
  service: 'gradbook-api',
  errno: -4077,
  code: 'ECONNRESET',
  syscall: 'read',
  level: 'error',
  message: 'Authentication error: read ECONNRESET',
  stack: 'Error: read ECONNRESET\n' +
    '    at TLSWrap.onStreamRead (node:internal/stream_base_commons:218:20)',
  timestamp: '2025-07-07 07:26:31'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:26:40'
}
{
  service: 'gradbook-api',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 3957877,
        lastWriteDate: 0,
        error: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
              at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
            errno: -3008,
            code: 'ENOTFOUND',
            syscall: 'getaddrinfo',
            hostname: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 3957880,
        lastWriteDate: 0,
        error: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-00.ped78m1.mongodb.net
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-00.ped78m1.mongodb.net
              at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
            errno: -3008,
            code: 'ENOTFOUND',
            syscall: 'getaddrinfo',
            hostname: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 3957881,
        lastWriteDate: 0,
        error: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-01.ped78m1.mongodb.net
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-01.ped78m1.mongodb.net
              at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
            errno: -3008,
            code: 'ENOTFOUND',
            syscall: 'getaddrinfo',
            hostname: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: new ObjectId('7fffffff000000000000002b'),
    maxSetVersion: 4,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  message: 'Authentication error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net',
  stack: 'MongoServerSelectionError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at tryOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:201:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)\n' +
    '    at Collection.findOne (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\collection.ts:525:17)\n' +
    '    at model.Query._findOne (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:2661:15)\n' +
    '    at model.Query.exec (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:4456:63)',
  cause: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
      at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
      at Object.onceWrapper (node:events:634:26)
      at TLSSocket.emit (node:events:519:28)
      at emitErrorNT (node:internal/streams/destroy:169:8)
      at emitErrorCloseNT (node:internal/streams/destroy:128:3)
      at processTicksAndRejections (node:internal/process/task_queues:82:21) {
    errorLabelSet: Set(1) { 'ResetPool' },
    beforeHandshake: false,
    [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
        at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
      errno: -3008,
      code: 'ENOTFOUND',
      syscall: 'getaddrinfo',
      hostname: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net'
    }
  },
  timestamp: '2025-07-07 07:26:45'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:26:46'
}
{
  service: 'gradbook-api',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 3963993,
        lastWriteDate: 0,
        error: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
              at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
            errno: -3008,
            code: 'ENOTFOUND',
            syscall: 'getaddrinfo',
            hostname: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 3963994,
        lastWriteDate: 0,
        error: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-00.ped78m1.mongodb.net
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-00.ped78m1.mongodb.net
              at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
            errno: -3008,
            code: 'ENOTFOUND',
            syscall: 'getaddrinfo',
            hostname: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 3963994,
        lastWriteDate: 0,
        error: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-01.ped78m1.mongodb.net
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-01.ped78m1.mongodb.net
              at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
            errno: -3008,
            code: 'ENOTFOUND',
            syscall: 'getaddrinfo',
            hostname: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: new ObjectId('7fffffff000000000000002b'),
    maxSetVersion: 4,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  message: 'Authentication error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net',
  stack: 'MongoServerSelectionError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at tryOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:201:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)\n' +
    '    at Collection.findOne (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\collection.ts:525:17)\n' +
    '    at model.Query._findOne (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:2661:15)\n' +
    '    at model.Query.exec (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:4456:63)',
  cause: MongoNetworkError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
      at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
      at Object.onceWrapper (node:events:634:26)
      at TLSSocket.emit (node:events:519:28)
      at emitErrorNT (node:internal/streams/destroy:169:8)
      at emitErrorCloseNT (node:internal/streams/destroy:128:3)
      at processTicksAndRejections (node:internal/process/task_queues:82:21) {
    errorLabelSet: Set(1) { 'ResetPool' },
    beforeHandshake: false,
    [cause]: Error: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net
        at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:120:26) {
      errno: -3008,
      code: 'ENOTFOUND',
      syscall: 'getaddrinfo',
      hostname: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net'
    }
  },
  timestamp: '2025-07-07 07:26:51'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:27:41'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net',
  stack: 'MongoServerSelectionError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at tryOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:201:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)\n' +
    '    at FindCursor.[Symbol.asyncIterator] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:506:26)\n' +
    '    at FindCursor.toArray (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:700:22)\n' +
    '    at model.Query._find (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:2381:14)',
  url: '/api/v1/posts?page=1&limit=10&search=&type=&userId=',
  method: 'GET',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 07:27:51'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:27:52'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net',
  stack: 'MongoServerSelectionError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at tryOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:201:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)\n' +
    '    at FindCursor.[Symbol.asyncIterator] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:506:26)\n' +
    '    at FindCursor.toArray (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:700:22)\n' +
    '    at model.Query._find (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:2381:14)',
  url: '/api/v1/posts?page=1&limit=10&search=&type=&userId=',
  method: 'GET',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 07:28:02'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:28:31'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net',
  stack: 'MongoServerSelectionError: getaddrinfo ENOTFOUND ac-advsz4l-shard-00-02.ped78m1.mongodb.net\n' +
    '    at Topology.selectServer (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\sdam\\topology.ts:628:30)\n' +
    '    at tryOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:201:16)\n' +
    '    at executeOperation (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\operations\\execute_operation.ts:115:12)\n' +
    '    at FindCursor._initialize (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\find_cursor.ts:92:22)\n' +
    '    at FindCursor.cursorInit (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:944:21)\n' +
    '    at FindCursor.fetchBatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:982:7)\n' +
    '    at FindCursor.next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:612:9)\n' +
    '    at FindCursor.[Symbol.asyncIterator] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:506:26)\n' +
    '    at FindCursor.toArray (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cursor\\abstract_cursor.ts:700:22)\n' +
    '    at model.Query._find (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\query.js:2381:14)',
  url: '/api/v1/posts?page=1&limit=10&search=&type=&userId=',
  method: 'GET',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 07:28:41'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:28:42'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:28:44'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:28:44'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:28:50'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:29:45'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:29:46'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:29:47'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:31:15'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:34:12'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:37:42'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:41:07'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:48:43'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:48:51'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:55:35'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:55:45'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 07:57:04'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:02:15'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:02:43'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:02:44'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:02:59'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:03:01'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:03:18'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:03:35'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:03:41'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:05:05'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:05:07'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:05:40'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:05:42'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:06:19'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:06:21'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:02'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:02'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:03'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:03'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:08'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:12'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:19'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:07:58'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:08:00'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:08:31'
}
{
  message: 'POST /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:09:08'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Question validation failed: question: Question text is required, category: Question category is required',
  stack: 'ValidationError: Question validation failed: question: Question text is required, category: Question category is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/admin/questions',
  method: 'POST',
  ip: '::1',
  userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36',
  level: 'error',
  timestamp: '2025-07-07 08:09:09'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:09:16'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:09:25'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:09:40'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:09:52'
}
{
  message: 'PUT /api/v1/admin/tags/686a29044ecf459fa06f2599 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:10:42'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 08:10:43'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:14:12'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 08:14:13'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:08:54'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:08:55'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:10:46'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:10:47'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:14:57'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:15:02'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:16:39'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:16:51'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:18:34'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:18:45'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:18:55'
}
{
  message: 'POST /api/v1/admin/users/686a29064ecf459fa06f25f1/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:19:14'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:19:19'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:19:21'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:19:30'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:20:18'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:20:20'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:21:08'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:21:42'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:21:44'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:23:01'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:23:01'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:23:05'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:23:06'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:23:06'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:23:07'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:28:54'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:29:07'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:34:59'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:35:10'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:35:10'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:36:51'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:36:56'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:37:10'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:37:19'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:37:20'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:37:32'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:39:41'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:41:11'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:41:53'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:41:56'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:42:13'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:43:03'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:43:33'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:43:34'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:43:59'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:44:27'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:44:28'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 09:52:04'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 09:53:27'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 09:54:55'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 09:58:08'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:33'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:34'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:34'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:34'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:34'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:34'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:47'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:58:58'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 09:58:59'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 09:59:01'
}
{
  message: 'GET /api/v1/admin/users/ - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:59:17'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 09:59:17'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:59:20'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 09:59:20'
}
{
  message: 'GET /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:59:37'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 09:59:37'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:59:47'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 09:59:50'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:00:25'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:00:42'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:00:42'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:01:38'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:01:38'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:01:57'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:01:57'
}
{
  message: 'GET /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:02:13'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:02:13'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:02:17'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:02:18'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:02:48'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25f2 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:03:18'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:03:18'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:04:07'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:04:07'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:04:07'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:04:07'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:04:07'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:04:07'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:05:09'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:05:09'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:06:09'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:06:09'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:06:15'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:06:15'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:08:27'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Validation error:',
  timestamp: '2025-07-07 10:08:27'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:08:52'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:08:53'
}
{
  message: 'POST /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:09:33'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:09:42'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25bb - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:10:01'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:10:01'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:12:50'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:12:50'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:12:50'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:12:50'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:12:50'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:12:50'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25bb - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:13:00'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:13:00'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:15:58'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:15:58'
}
{
  message: 'GET /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:17:11'
}
{
  service: 'gradbook-api',
  name: 'JsonWebTokenError',
  message: 'Authentication error: jwt malformed',
  level: 'error',
  stack: 'JsonWebTokenError: jwt malformed\n' +
    '    at Object.module.exports [as verify] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n' +
    '    at authenticate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\auth.ts:36:25)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at trim_prefix (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:328:13)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:286:9\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:346:12)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:280:10)\n' +
    '    at Function.handle (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:175:3)\n' +
    '    at router (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:47:12)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)',
  timestamp: '2025-07-07 10:17:11'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:17:17'
}
{
  message: 'User logged in: david.jones4@university.edu',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:17:18'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:18:02'
}
{
  message: 'GET /api/v1/admin/users/1 - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:18:07'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:18:07'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25bb - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:18:29'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:18:30'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:29'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:30'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:30'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:30'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:30'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:30'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25bb - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:19:35'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid user ID',
  stack: 'Error: Invalid user ID\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\controllers\\adminController.ts:75:15\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\errorHandler.ts:85:21\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\route.js:149:13)\n' +
    '    at Route.dispatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\route.js:119:3)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:284:15\n' +
    '    at param (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:365:14)\n' +
    '    at param (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:376:14)\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:421:3)',
  url: '/api/v1/admin/users/686a29064ecf459fa06f25bb',
  method: 'GET',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-07 10:19:35'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:12'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:12'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:12'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:12'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:12'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:12'
}
{
  message: 'GET /api/v1/admin/users/686a29064ecf459fa06f25bb - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:21:15'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid user ID',
  stack: 'Error: Invalid user ID\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\controllers\\adminController.ts:75:15\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\middleware\\errorHandler.ts:85:21\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at next (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\route.js:149:13)\n' +
    '    at Route.dispatch (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\route.js:119:3)\n' +
    '    at Layer.handle [as handle_request] (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:284:15\n' +
    '    at param (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:365:14)\n' +
    '    at param (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:376:14)\n' +
    '    at Function.process_params (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\express\\lib\\router\\index.js:421:3)',
  url: '/api/v1/admin/users/686a29064ecf459fa06f25bb',
  method: 'GET',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-07 10:21:15'
}
{
  message: 'PUT /api/v1/admin/users/686a29064ecf459fa06f25bb/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:22:26'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:22:26'
}
{
  message: 'PUT /api/v1/admin/users/2/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:23:20'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:23:21'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:27:58'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:27:58'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:27:58'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:27:58'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:27:58'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:27:58'
}
{
  message: 'PUT /api/v1/admin/users/2/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:28:02'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:28:03'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:12'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:13'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:13'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:13'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:13'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:13'
}
{
  message: "PUT /api/v1/admin/users/'2'/deactivate - ::1",
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:18'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:34:19'
}
{
  message: 'PUT /api/v1/admin/users/%222%22/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:34:30'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:34:30'
}
{
  message: 'PUT /api/v1/admin/users/686a29064ecf459fa06f25bb/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:37:29'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:37:31'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 15481597,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 15481597,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 15481597,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-07 10:38:54'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 15556811,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 15556811,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 15556811,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-07 10:40:09'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 10:46:16'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-07 10:50:11'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:49'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:49'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:49'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:49'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:49'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:49'
}
{
  message: 'PUT /api/v1/admin/users/686a29064ecf459fa06f25bb/deactivate - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:50:55'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Params validation error:',
  timestamp: '2025-07-07 10:50:55'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:11'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:11'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:11'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:11'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:11'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:11'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-07 10:52:27'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:01'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:01'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:01'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:01'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:01'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:01'
}
{
  message: 'GET /api/v1/admin/analytics - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:44'
}
{
  message: 'GET /api/v1/admin/users - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:50'
}
{
  message: 'GET /api/v1/categories/structure - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:47:58'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:48:01'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25e4: 5 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:48:02'
}
{
  message: 'GET /api/v1/admin/reports - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:48:06'
}
{
  message: 'GET /api/v1/admin/questions - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:48:07'
}
{
  message: 'GET /api/v1/admin/tags - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-08 18:48:11'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-09 01:20:52'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-09 01:22:51'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 01:23:29'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 01:23:30'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 01:23:30'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 01:23:30'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 01:23:30'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 01:23:30'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 03:10:54'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:25:04'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:25:15'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:31:46'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:31:57'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:37:48'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:38:00'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:43:51'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:44:02'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:50:03'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:50:14'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:56:15'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 04:56:26'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:02:18'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:02:29'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:08:20'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:08:31'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:14:32'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:14:43'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:20:35'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:20:46'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:26:47'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 05:26:58'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:02:01'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:02:14'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:09:25'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:09:38'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:15:19'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:15:31'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:21:34'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:21:48'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:27:29'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:28:40'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:34:30'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:35:26'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:41:41'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:42:28'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:49:39'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:51:06'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:57:43'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:58:01'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 06:58:02'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:03:44'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:04:18'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:06:30'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:06:38'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:35:59'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:36:07'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:36:11'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 07:36:18'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 10:20:10'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 10:20:11'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 10:20:23'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 10:20:24'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 10:31:20'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 10:31:31'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 11:59:49'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:00:00'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:05:51'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:06:05'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:22:14'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:22:15'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:30:00'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:31:04'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:32:34'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:32:37'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:33:24'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:33:26'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:33:47'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:33:51'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:35:43'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 12:36:04'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:05:39'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:07:37'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:07:46'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:09:14'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:09:34'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:09:55'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:10:04'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:10:15'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:10:43'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:14:25'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:15:09'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:15:09'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:15:11'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:15:21'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:32:39'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:32:42'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:32:54'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-09 13:33:02'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:31'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:31'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:31'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:31'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:31'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:31'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 08:55:41'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:23:58'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:23:59'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:23:59'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:23:59'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:23:59'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:23:59'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 09:26:39'
}
{
  service: 'gradbook-api',
  code: 'EAUTH',
  response: '535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials a640c23a62f3a-ae6e7e8f9b4sm108473366b.11 - gsmtp',
  responseCode: 535,
  command: 'AUTH PLAIN',
  level: 'error',
  message: 'Email service configuration error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials a640c23a62f3a-ae6e7e8f9b4sm108473366b.11 - gsmtp',
  stack: 'Error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials a640c23a62f3a-ae6e7e8f9b4sm108473366b.11 - gsmtp\n' +
    '    at SMTPConnection._formatError (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n' +
    '    at SMTPConnection._actionAUTHComplete (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1588:34)\n' +
    '    at SMTPConnection.<anonymous> (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:556:26)\n' +
    '    at SMTPConnection._processResponse (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n' +
    '    at SMTPConnection._onData (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n' +
    '    at TLSSocket.SMTPConnection._onSocketData (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)\n' +
    '    at TLSSocket.emit (node:events:519:28)\n' +
    '    at addChunk (node:internal/streams/readable:559:12)\n' +
    '    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n' +
    '    at TLSSocket.Readable.push (node:internal/streams/readable:390:5)',
  timestamp: '2025-07-10 13:21:53'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 18839519,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 18839519,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 18839519,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 13:21:56'
}
{
  service: 'gradbook-api',
  code: 'EAUTH',
  response: '535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials a640c23a62f3a-ae6e7e91a1bsm107341166b.29 - gsmtp',
  responseCode: 535,
  command: 'AUTH PLAIN',
  level: 'error',
  message: 'Email service configuration error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials a640c23a62f3a-ae6e7e91a1bsm107341166b.29 - gsmtp',
  stack: 'Error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials a640c23a62f3a-ae6e7e91a1bsm107341166b.29 - gsmtp\n' +
    '    at SMTPConnection._formatError (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n' +
    '    at SMTPConnection._actionAUTHComplete (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1588:34)\n' +
    '    at SMTPConnection.<anonymous> (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:556:26)\n' +
    '    at SMTPConnection._processResponse (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n' +
    '    at SMTPConnection._onData (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n' +
    '    at TLSSocket.SMTPConnection._onSocketData (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)\n' +
    '    at TLSSocket.emit (node:events:519:28)\n' +
    '    at addChunk (node:internal/streams/readable:559:12)\n' +
    '    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n' +
    '    at TLSSocket.Readable.push (node:internal/streams/readable:390:5)',
  timestamp: '2025-07-10 13:25:45'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 19071270,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 19071270,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 19071270,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 13:25:48'
}
{
  service: 'gradbook-api',
  code: 'EAUTH',
  response: '535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials ffacd0b85a97d-3b5e8e0d727sm1511121f8f.51 - gsmtp',
  responseCode: 535,
  command: 'AUTH PLAIN',
  level: 'error',
  message: 'Email service configuration error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials ffacd0b85a97d-3b5e8e0d727sm1511121f8f.51 - gsmtp',
  stack: 'Error: Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to\n' +
    '535 5.7.8  https://support.google.com/mail/?p=BadCredentials ffacd0b85a97d-3b5e8e0d727sm1511121f8f.51 - gsmtp\n' +
    '    at SMTPConnection._formatError (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:809:19)\n' +
    '    at SMTPConnection._actionAUTHComplete (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:1588:34)\n' +
    '    at SMTPConnection.<anonymous> (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:556:26)\n' +
    '    at SMTPConnection._processResponse (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:993:20)\n' +
    '    at SMTPConnection._onData (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:774:14)\n' +
    '    at TLSSocket.SMTPConnection._onSocketData (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\nodemailer\\lib\\smtp-connection\\index.js:195:44)\n' +
    '    at TLSSocket.emit (node:events:519:28)\n' +
    '    at addChunk (node:internal/streams/readable:559:12)\n' +
    '    at readableAddChunkPushByteMode (node:internal/streams/readable:510:3)\n' +
    '    at TLSSocket.Readable.push (node:internal/streams/readable:390:5)',
  timestamp: '2025-07-10 13:31:16'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:31:17'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:31:17'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:31:17'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:31:17'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:31:17'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:31:17'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:38:34'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:38:52'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:39:03'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:41:35'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:42:23'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:43:24'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:45:39'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:46:08'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:46:12'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:47:23'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:48:15'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:43'
}
{
  message: 'üîå HTTP server closed',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:43'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:53'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:58'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:58'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:58'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:58'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:58'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:54:58'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:55:21'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:55:32'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:55:34'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:56:14'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:56:15'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 13:56:36'
}
{
  service: 'gradbook-api',
  errorLabelSet: Set(1) { 'ResetPool' },
  beforeHandshake: false,
  connectionGeneration: 5,
  level: 'error',
  message: 'Authentication error: connect ETIMEDOUT 159.41.79.95:27017',
  stack: 'MongoNetworkError: connect ETIMEDOUT 159.41.79.95:27017\n' +
    '    at TLSSocket.<anonymous> (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongodb\\src\\cmap\\connect.ts:394:16)\n' +
    '    at Object.onceWrapper (node:events:634:26)\n' +
    '    at TLSSocket.emit (node:events:519:28)\n' +
    '    at emitErrorNT (node:internal/streams/destroy:169:8)\n' +
    '    at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)',
  cause: Error: connect ETIMEDOUT 159.41.79.95:27017
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1607:16) {
    errno: -4039,
    code: 'ETIMEDOUT',
    syscall: 'connect',
    address: '159.41.79.95',
    port: 27017
  },
  timestamp: '2025-07-10 13:56:36'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:04:05'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:04:19'
}
{
  service: 'gradbook-api',
  message: "‚ùå Database connection failed: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/",
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 21387796,
        lastWriteDate: 0,
        error: MongoNetworkError: B0620000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:c:\ws\deps\openssl\openssl\ssl\record\rec_layer_s3.c:1590:SSL alert number 80
        
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: [Error: B0620000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:c:\ws\deps\openssl\openssl\ssl\record\rec_layer_s3.c:1590:SSL alert number 80
          ] {
            library: 'SSL routines',
            reason: 'tlsv1 alert internal error',
            code: 'ERR_SSL_TLSV1_ALERT_INTERNAL_ERROR'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 21387539,
        lastWriteDate: 0,
        error: MongoNetworkError: B0620000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:c:\ws\deps\openssl\openssl\ssl\record\rec_layer_s3.c:1590:SSL alert number 80
        
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: [Error: B0620000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:c:\ws\deps\openssl\openssl\ssl\record\rec_layer_s3.c:1590:SSL alert number 80
          ] {
            library: 'SSL routines',
            reason: 'tlsv1 alert internal error',
            code: 'ERR_SSL_TLSV1_ALERT_INTERNAL_ERROR'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 21388771,
        lastWriteDate: 0,
        error: MongoNetworkError: B0620000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:c:\ws\deps\openssl\openssl\ssl\record\rec_layer_s3.c:1590:SSL alert number 80
        
            at TLSSocket.<anonymous> (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongodb\src\cmap\connect.ts:394:16)
            at Object.onceWrapper (node:events:634:26)
            at TLSSocket.emit (node:events:519:28)
            at emitErrorNT (node:internal/streams/destroy:169:8)
            at emitErrorCloseNT (node:internal/streams/destroy:128:3)
            at processTicksAndRejections (node:internal/process/task_queues:82:21) {
          errorLabelSet: Set(1) { 'ResetPool' },
          beforeHandshake: false,
          [cause]: [Error: B0620000:error:0A000438:SSL routines:ssl3_read_bytes:tlsv1 alert internal error:c:\ws\deps\openssl\openssl\ssl\record\rec_layer_s3.c:1590:SSL alert number 80
          ] {
            library: 'SSL routines',
            reason: 'tlsv1 alert internal error',
            code: 'ERR_SSL_TLSV1_ALERT_INTERNAL_ERROR'
          }
        },
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: null
  },
  code: undefined,
  level: 'error',
  stack: "MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://www.mongodb.com/docs/atlas/security-whitelist/\n" +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 14:04:21'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:28'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:29'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:30'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:30'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:30'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:30'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:05:30'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:06:38'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: User validation failed: department: Department is required, college: College is required, campus: Campus is required',
  stack: 'ValidationError: User validation failed: department: Department is required, college: College is required, campus: Campus is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/auth/register',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:06:38'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:19'
}
{
  service: 'gradbook-api',
  message: '‚ùå Database connection failed: Server selection timed out after 5000 ms',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 21566300,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          region: 'ME_SOUTH_1',
          availabilityZone: 'mes1-az1',
          diskState: 'READY',
          provider: 'AWS',
          workloadType: 'OPERATIONAL',
          nodeType: 'ELECTABLE'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 292,
        minRoundTripTime: 0,
        lastUpdateTime: 21567595,
        lastWriteDate: 2025-07-10T11:07:19.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866d753c565f770d5c72510'),
          counter: 5
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752145639, i: 1 }),
          signature: {
            hash: <Buffer 84 4e 01 db 2e 19 e9 2c 46 0a 28 db cd 98 32 9f 5c 4a 3a da>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 21566301,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: 30
  },
  code: undefined,
  level: 'error',
  stack: 'MongooseServerSelectionError: Server selection timed out after 5000 ms\n' +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 14:07:23'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:49'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:49'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:50'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:50'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:50'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:50'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:50'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:07:53'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: User validation failed: department: Department is required, college: College is required, campus: Campus is required',
  stack: 'ValidationError: User validation failed: department: Department is required, college: College is required, campus: Campus is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/auth/register',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:07:54'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:26'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:28'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:28'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:28'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:28'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:28'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:28'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:08:33'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: User validation failed: department: Department is required, college: College is required, campus: Campus is required',
  stack: 'ValidationError: User validation failed: department: Department is required, college: College is required, campus: Campus is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/auth/register',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:08:35'
}
{
  service: 'gradbook-api',
  message: '‚ùå Database connection failed: Server selection timed out after 5000 ms',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          diskState: 'READY',
          workloadType: 'OPERATIONAL',
          provider: 'AWS',
          nodeType: 'ELECTABLE',
          region: 'ME_SOUTH_1',
          availabilityZone: 'mes1-az2'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 1282,
        minRoundTripTime: 0,
        lastUpdateTime: 21704524,
        lastWriteDate: 2025-07-10T11:09:34.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866de0d3ed9958e7a57c6a7'),
          counter: 3
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752145774, i: 1 }),
          signature: {
            hash: <Buffer 77 c3 4d 39 e4 7b 35 c4 4c 4d f8 d6 e1 44 cd 1d 91 88 49 19>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          diskState: 'READY',
          workloadType: 'OPERATIONAL',
          nodeType: 'ELECTABLE',
          availabilityZone: 'mes1-az1',
          provider: 'AWS',
          region: 'ME_SOUTH_1'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 320,
        minRoundTripTime: 0,
        lastUpdateTime: 21702314,
        lastWriteDate: 2025-07-10T11:09:33.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866d753c565f770d5c72510'),
          counter: 5
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752145773, i: 1 }),
          signature: {
            hash: <Buffer 80 b4 3e 64 83 63 26 09 81 47 c0 f2 6b 51 bb 92 b9 8b e5 41>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 21701045,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: 30
  },
  code: undefined,
  level: 'error',
  stack: 'MongooseServerSelectionError: Server selection timed out after 5000 ms\n' +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 14:09:38'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:05'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:05'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:05'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:05'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:05'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:05'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:06'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:37'
}
{
  service: 'gradbook-api',
  messageId: '<d4a39180-38f4-5ca0-54c8-cfe5e432c164@yearbook.com>',
  subject: 'Verify Your Email - yearBook',
  level: 'info',
  message: 'Email sent successfully to emel.doe@university.edu:',
  timestamp: '2025-07-10 14:10:43'
}
{
  message: 'New user registered: emel.doe@university.edu (graduate)',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:10:43'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:11:51'
}
{
  service: 'gradbook-api',
  messageId: '<94694225-3b81-060f-f21a-6580df0f4e39@yearbook.com>',
  subject: 'Verify Your Email - yearBook',
  level: 'info',
  message: 'Email sent successfully to ysakor77@gmail.com:',
  timestamp: '2025-07-10 14:12:04'
}
{
  message: 'New user registered: ysakor77@gmail.com (graduate)',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:12:04'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:15:23'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:19'
}
{
  service: 'gradbook-api',
  message: '‚ùå Database connection failed: Server selection timed out after 5000 ms',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          diskState: 'READY',
          availabilityZone: 'mes1-az2',
          region: 'ME_SOUTH_1',
          nodeType: 'ELECTABLE',
          workloadType: 'OPERATIONAL',
          provider: 'AWS'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 281,
        minRoundTripTime: 0,
        lastUpdateTime: 22165500,
        lastWriteDate: 2025-07-10T11:17:16.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866de0d3ed9958e7a57c6a7'),
          counter: 3
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752146236, i: 1 }),
          signature: {
            hash: <Buffer 9e fd c4 cb 0f 13 aa e3 56 b9 d9 59 81 e2 67 86 f4 5e 89 f1>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 22164368,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          provider: 'AWS',
          workloadType: 'OPERATIONAL',
          nodeType: 'ELECTABLE',
          region: 'ME_SOUTH_1',
          availabilityZone: 'mes1-az1',
          diskState: 'READY'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 1079,
        minRoundTripTime: 0,
        lastUpdateTime: 22166599,
        lastWriteDate: 2025-07-10T11:17:17.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866d753c565f770d5c72510'),
          counter: 5
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752146237, i: 1 }),
          signature: {
            hash: <Buffer 76 b6 87 03 d1 e9 d0 b0 c5 0b 02 2c 40 9e e4 41 ce 23 01 5a>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: 30
  },
  code: undefined,
  level: 'error',
  stack: 'MongooseServerSelectionError: Server selection timed out after 5000 ms\n' +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 14:17:21'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:34'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:34'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:34'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:34'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:34'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:34'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:17:36'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:20'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:29'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:29'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:29'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:29'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:29'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:18:29'
}
{
  message: 'POST /api/v1/auth/resend-opt - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:19:26'
}
{
  message: 'POST /api/v1/auth/resend-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:19:35'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: An OTP is already pending or not expired yet.',
  stack: 'Error: An OTP is already pending or not expired yet.\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:166:15\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  url: '/api/v1/auth/resend-otp',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:19:36'
}
{
  message: 'POST /api/v1/auth/verify-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:20:00'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Invalid or expired OTP',
  stack: 'Error: Invalid or expired OTP\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:127:15\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  url: '/api/v1/auth/verify-otp',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:20:00'
}
{
  message: 'POST /api/v1/auth/verify-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:20:30'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:21:10'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:21:11'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:22:03'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:22:03'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:25:51'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-10 14:26:42'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:30:27'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-10 14:31:17'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:36:59'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-10 14:37:44'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:43:27'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:45:06'
}
{
  message: 'GET /api/v1/users/686a29064ecf459fa06f25cf - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:47:09'
}
{
  message: 'User 686a29064ecf459fa06f25bc viewd user 686a29064ecf459fa06f25cf',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:47:13'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:47:28'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Email already registered',
  stack: 'Error: Email already registered\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\controllers\\authController.ts:46:17\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  url: '/api/v1/auth/register',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:47:28'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Expected double-quoted property name in JSON at position 38',
  stack: 'SyntaxError: Expected double-quoted property name in JSON at position 38\n' +
    '    at JSON.parse (<anonymous>)\n' +
    '    at parse (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\body-parser\\lib\\types\\json.js:92:19)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\body-parser\\lib\\read.js:128:18\n' +
    '    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n' +
    '    at invokeCallback (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\raw-body\\index.js:238:16)\n' +
    '    at done (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\raw-body\\index.js:227:7)\n' +
    '    at IncomingMessage.onEnd (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\raw-body\\index.js:287:7)\n' +
    '    at IncomingMessage.emit (node:events:519:28)\n' +
    '    at endReadableNT (node:internal/streams/readable:1696:12)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)',
  url: '/api/v1/auth/resend-otp',
  method: 'GET',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:48:59'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:15'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:33'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:33'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:33'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:33'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:33'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:33'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:34'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Expected double-quoted property name in JSON at position 38',
  stack: 'SyntaxError: Expected double-quoted property name in JSON at position 38\n' +
    '    at JSON.parse (<anonymous>)\n' +
    '    at parse (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\body-parser\\lib\\types\\json.js:92:19)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\body-parser\\lib\\read.js:128:18\n' +
    '    at AsyncResource.runInAsyncScope (node:async_hooks:206:9)\n' +
    '    at invokeCallback (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\raw-body\\index.js:238:16)\n' +
    '    at done (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\raw-body\\index.js:227:7)\n' +
    '    at IncomingMessage.onEnd (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\raw-body\\index.js:287:7)\n' +
    '    at IncomingMessage.emit (node:events:519:28)\n' +
    '    at endReadableNT (node:internal/streams/readable:1696:12)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:82:21)',
  url: '/api/v1/auth/resend-otp',
  method: 'GET',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 14:49:53'
}
{
  message: 'GET /api/v1/auth/resend-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:49:58'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:51:27'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:51:38'
}
{
  message: 'GET /api/v1/auth/resend-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:52:24'
}
{
  message: 'POST /api/v1/auth/register - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:53:36'
}
{
  service: 'gradbook-api',
  messageId: '<66344246-84bf-1dd1-b751-adeaf7d307ea@yearbook.com>',
  subject: 'Verify Your Email - yearBook',
  level: 'info',
  message: 'Email sent successfully to ysakor77@gmail.com:',
  timestamp: '2025-07-10 14:53:40'
}
{
  message: 'New user registered: ysakor77@gmail.com (graduate)',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:53:40'
}
{
  message: 'GET /api/v1/auth/verify-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:54:42'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:54:58'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-10 14:55:50'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:56:17'
}
{
  service: 'gradbook-api',
  errno: undefined,
  code: 'ETIMEOUT',
  syscall: 'queryTxt',
  hostname: 'nodexpress.ped78m1.mongodb.net',
  level: 'error',
  message: '‚ùå Database connection failed: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net',
  stack: 'Error: queryTxt ETIMEOUT nodexpress.ped78m1.mongodb.net\n' +
    '    at QueryReqWrap.onresolve [as oncomplete] (node:internal/dns/promises:291:17)',
  timestamp: '2025-07-10 14:57:02'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:57:50'
}
{
  service: 'gradbook-api',
  message: '‚ùå Database connection failed: Server selection timed out after 5000 ms',
  errorLabelSet: Set(0) {},
  reason: TopologyDescription {
    type: 'ReplicaSetNoPrimary',
    servers: Map(3) {
      'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          diskState: 'READY',
          workloadType: 'OPERATIONAL',
          nodeType: 'ELECTABLE',
          availabilityZone: 'mes1-az1',
          provider: 'AWS',
          region: 'ME_SOUTH_1'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 256,
        minRoundTripTime: 0,
        lastUpdateTime: 24596416,
        lastWriteDate: 2025-07-10T11:57:48.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866d753c565f770d5c72510'),
          counter: 5
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752148668, i: 1 }),
          signature: {
            hash: <Buffer 5a f1 23 16 89 ac ef 85 05 d4 99 93 05 a0 b7 38 78 15 f3 83>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      },
      'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        type: 'Unknown',
        hosts: [],
        passives: [],
        arbiters: [],
        tags: {},
        minWireVersion: 0,
        maxWireVersion: 0,
        roundTripTime: -1,
        minRoundTripTime: 0,
        lastUpdateTime: 24595005,
        lastWriteDate: 0,
        error: null,
        topologyVersion: null,
        setName: null,
        setVersion: null,
        electionId: null,
        logicalSessionTimeoutMinutes: null,
        maxMessageSizeBytes: null,
        maxWriteBatchSize: null,
        maxBsonObjectSize: null,
        primary: null,
        me: null,
        '$clusterTime': null,
        iscryptd: false
      },
      'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017' => ServerDescription {
        address: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        type: 'RSSecondary',
        hosts: [
          'ac-advsz4l-shard-00-00.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
          'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017'
        ],
        passives: [],
        arbiters: [],
        tags: {
          availabilityZone: 'mes1-az2',
          nodeType: 'ELECTABLE',
          region: 'ME_SOUTH_1',
          workloadType: 'OPERATIONAL',
          provider: 'AWS',
          diskState: 'READY'
        },
        minWireVersion: 0,
        maxWireVersion: 25,
        roundTripTime: 261,
        minRoundTripTime: 0,
        lastUpdateTime: 24596399,
        lastWriteDate: 2025-07-10T11:57:48.000Z,
        error: null,
        topologyVersion: {
          processId: new ObjectId('6866de0d3ed9958e7a57c6a7'),
          counter: 3
        },
        setName: 'atlas-jpqdje-shard-0',
        setVersion: 4,
        electionId: null,
        logicalSessionTimeoutMinutes: 30,
        maxMessageSizeBytes: 48000000,
        maxWriteBatchSize: 100000,
        maxBsonObjectSize: 16777216,
        primary: 'ac-advsz4l-shard-00-02.ped78m1.mongodb.net:27017',
        me: 'ac-advsz4l-shard-00-01.ped78m1.mongodb.net:27017',
        '$clusterTime': {
          clusterTime: new Timestamp({ t: 1752148668, i: 1 }),
          signature: {
            hash: <Buffer 5a f1 23 16 89 ac ef 85 05 d4 99 93 05 a0 b7 38 78 15 f3 83>,
            keyId: new Long('7486576894024876035')
          }
        },
        iscryptd: false
      }
    },
    stale: false,
    compatible: true,
    heartbeatFrequencyMS: 10000,
    localThresholdMS: 15,
    setName: 'atlas-jpqdje-shard-0',
    maxElectionId: null,
    maxSetVersion: null,
    commonWireVersion: 0,
    logicalSessionTimeoutMinutes: 30
  },
  code: undefined,
  level: 'error',
  stack: 'MongooseServerSelectionError: Server selection timed out after 5000 ms\n' +
    '    at _handleConnectionErrors (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1165:11)\n' +
    '    at NativeConnection.openUri (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\connection.js:1096:11)\n' +
    '    at Database.connect (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\config\\database.ts:37:7)\n' +
    '    at Server.start (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\src\\server.ts:117:7)',
  timestamp: '2025-07-10 14:57:52'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:03'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:04'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:04'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:04'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:04'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:04'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:04'
}
{
  message: 'GET /api/v1/auth/verify-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:08'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:46'
}
{
  message: 'POST /api/v1/auth/verify-otp - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 14:59:50'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:10:01'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:10:01'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:10:15'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:10:15'
}
{
  message: 'GET /api/v1/users/me/liked - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:11:39'
}
{
  message: 'GET /api/v1/users/me/suggested - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:12:15'
}
{
  message: 'Generated 10 suggested users for 686a29064ecf459fa06f25bc',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:12:35'
}
{
  message: 'üì¥ Received SIGINT. Starting graceful shutdown...',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 15:15:26'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:14'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:15'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:15'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:15'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:15'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:15'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:27:15'
}
{
  message: 'GET /api/v1/users/me/suggested - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:29:07'
}
{
  message: 'Generated 10 suggested users for 686a29064ecf459fa06f25bc',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:29:08'
}
{
  message: 'POST /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:29:28'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Validation error:',
  timestamp: '2025-07-10 17:29:29'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:29:40'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 10 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:29:43'
}
{
  message: 'GET /api/v1/posts/686a29074ecf459fa06f263a - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:32:11'
}
{
  message: 'User 686a29064ecf459fa06f25bc viewd post 686a29074ecf459fa06f263a',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:32:11'
}
{
  message: 'POST /api/v1/posts/686a29074ecf459fa06f263a/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:32:30'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-10 17:32:32'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/posts/686a29074ecf459fa06f263a/like',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 17:32:32'
}
{
  message: 'POST /api/v1/auth/login - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:33:55'
}
{
  message: 'User logged in: ysakor77@gmail.com',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:33:56'
}
{
  message: 'POST /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:36:37'
}
{
  service: 'gradbook-api',
  level: 'warn',
  message: 'Validation error:',
  timestamp: '2025-07-10 17:36:37'
}
{
  message: 'GET /api/v1/posts - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:36:45'
}
{
  message: 'Generated new_user feed for user 686a29064ecf459fa06f25bc: 10 posts',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:36:46'
}
{
  message: 'POST /api/v1/posts/686a29074ecf459fa06f263a/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:37:30'
}
{
  message: 'POST /api/v1/posts/686a29074ecf459fa06f263a/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:37:45'
}
{
  service: 'gradbook-api',
  errors: {
    fromUser: ValidatorError: From user is required
        at validate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'From user is required',
        type: 'required',
        path: 'fromUser',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'fromUser',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    },
    user: ValidatorError: User is required
        at validate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1404:13)
        at SchemaObjectId.SchemaType.doValidate (C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\schemaType.js:1388:7)
        at C:\Users\dell\Documents\gBook\gBook_backend\gBook_backend\node_modules\mongoose\lib\document.js:3082:18
        at processTicksAndRejections (node:internal/process/task_queues:77:11) {
      properties: {
        validator: [Function (anonymous)],
        message: 'User is required',
        type: 'required',
        path: 'user',
        fullPath: undefined,
        value: undefined
      },
      kind: 'required',
      path: 'user',
      value: undefined,
      reason: undefined,
      [Symbol(mongoose#validatorError)]: true
    }
  },
  _message: 'Notification validation failed',
  level: 'error',
  message: 'Error creating notification: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  timestamp: '2025-07-10 17:37:45'
}
{
  service: 'gradbook-api',
  message: 'Error occurred: Notification validation failed: fromUser: From user is required, user: User is required',
  stack: 'ValidationError: Notification validation failed: fromUser: From user is required, user: User is required\n' +
    '    at model.Document.invalidate (C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3329:32)\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\document.js:3090:17\n' +
    '    at C:\\Users\\dell\\Documents\\gBook\\gBook_backend\\gBook_backend\\node_modules\\mongoose\\lib\\schemaType.js:1407:9\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:77:11)',
  url: '/api/v1/posts/686a29074ecf459fa06f263a/like?fromUser=686fa9c08ad6c457c65381b7&user=686a29064ecf459fa06f25d4',
  method: 'POST',
  ip: '::1',
  userAgent: 'PostmanRuntime/7.44.1',
  level: 'error',
  timestamp: '2025-07-10 17:37:45'
}
{
  message: 'POST /api/v1/users/686a29064ecf459fa06f25ba/like - ::1',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:40:06'
}
{
  message: 'Notification created for user 686a29064ecf459fa06f25ba: David Jones liked your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:40:08'
}
{
  message: 'Notification sent to user 686a29064ecf459fa06f25ba: David Jones liked your profile',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:40:08'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:41:13'
}
{
  message: 'Database disconnected',
  level: 'warn',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:42:05'
}
{
  message: 'Database reconnected',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 17:42:05'
}
{
  message: '‚úÖ Database connected successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:37'
}
{
  message: '‚úÖ Firebase initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:37'
}
{
  message: '‚úÖ Socket.IO initialized successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:37'
}
{
  message: 'üöÄ GradBook API server running on port 3000',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:37'
}
{
  message: 'üì± Environment: development',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:37'
}
{
  message: 'üåê Health check: http://localhost:3000/health',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:37'
}
{
  message: '‚úÖ Email service configured successfully',
  level: 'info',
  service: 'gradbook-api',
  timestamp: '2025-07-10 18:01:42'
}
